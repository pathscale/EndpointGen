#![enable(unwrap_newtypes)]
#![enable(unwrap_variant_newtypes)]
Config(
    definition: EndpointSchemaList (
		"user",
        1,
		[
        EndpointSchema(
            name: "UserGetSlippage1",
            code: 20710,
            parameters: [],
            returns: [
                Field(
                    name: "data",
                    ty: DataTable(
                        name: "S1Slippage",
                        fields: [
                            Field(name: "id", ty: Int), 
                            Field(name: "event_id", ty: Int), 
                            Field(name: "event_timestamp", ty: BigInt), 
                            Field(name: "direction", ty: String), 
                            Field(name: "symbol", ty: String), 
                            Field(name: "orderbook_binance_trigger_price", ty: Numeric), 
                            Field(name: "orderbook_hyperliquid_trigger_price", ty: Numeric), 
                            Field(name: "binance_hyper_spread_bp", ty: Numeric), 
                            Field(name: "binance_hyper_spread_level", ty: String), 
                            Field(name: "avg_bin_hyper_spread_bp", ty: Numeric), 
                            Field(name: "avg_binance_hyper_spread_level", ty: String), 
                            Field(name: "signal_binance_change_bp", ty: Numeric), 
                            Field(name: "signal_hyper_change_bp", ty: Numeric), 
                            Field(name: "signal_trend_strength_dx", ty: Numeric), 
                            Field(name: "actual_buy_price", ty: Numeric), 
                            Field(name: "buy_position_usd", ty: Numeric), 
                            Field(name: "actual_sell_price", ty: Numeric), 
                            Field(name: "sell_position_usd", ty: Numeric), 
                            Field(name: "fee", ty: Numeric), 
                            Field(name: "net", ty: Numeric), 
                            Field(name: "orderbook_hyperliquid_bid_at_sell_time", ty: Numeric), 
                            Field(name: "orderbook_hyperliquid_ask_at_sell_time", ty: Numeric), 
                            Field(name: "orderbook_binance_sell_price", ty: Numeric)],
                    ),
                ),
            ],
            stream_response: None,
            description: "",
            json_schema: (),
        ),
        EndpointSchema(
            name: "UserGetEvent1",
            code: 20720,
            parameters: [
                Field(
                    name: "event_id",
                    ty: Optional(Int),
                ),
            ],
            returns: [
                Field(
                    name: "data",
                    ty: DataTable(
                        name: "S1Event",
                        fields: [
                            Field(name: "id", ty: Int), 
                            Field(name: "timestamp", ty: BigInt), 
                            Field(name: "symbol", ty: String), 
                            Field(name: "direction", ty: String), 
                            Field(name: "opportunity_price", ty: Numeric), 
                            Field(name: "opportunity_size", ty: Numeric), 
                            Field(name: "original_opportunity_size", ty: Numeric), 
                            Field(name: "status", ty: String), 
                            Field(name: "orders", ty: Vec(BigInt))],
                    ),
                ),
            ],
            stream_response: None,
            description: "",
            json_schema: (),
        ),
        EndpointSchema(
            name: "UserGetDebugEvent1",
            code: 20721,
            parameters: [],
            returns: [
                Field(
                    name: "data",
                    ty: DataTable(
                        name: "S1DebugEvent",
                        fields: [
                            Field(name: "id", ty: Int), 
                            Field(name: "timestamp", ty: BigInt), 
                            Field(name: "symbol", ty: String), 
                            Field(name: "direction", ty: String), 
                            Field(name: "opportunity_price", ty: Numeric), 
                            Field(name: "opportunity_size", ty: Numeric), 
                            Field(name: "status", ty: String)],
                    ),
                ),
            ],
            stream_response: None,
            description: "",
            json_schema: (),
        ),
        EndpointSchema(
            name: "UserGetOrder1",
            code: 20730,
            parameters: [
                Field(name: "order_id", ty: Optional(Int) ),
                Field(name: "event_id", ty: Optional(Int) ),
            ],
            returns: [
                Field(name: "data", 
                ty: DataTable(
                        name: "S1Order",
                        fields: [
                            Field(name: "id", ty: BigInt), 
                            Field(name: "timestamp", ty: BigInt), 
                            Field(name: "cloid", ty: UUID), 
                            Field(name: "event_id", ty: BigInt), 
                            Field(name: "order_type", ty: String), 
                            Field(name: "order_role", ty: String), 
                            Field(name: "symbol", ty: String), 
                            Field(name: "price", ty: Numeric), 
                            Field(name: "average_filled_price", ty: Numeric), 
                            Field(name: "size", ty: Numeric), Field(name: "filled", ty: Numeric), 
                            Field(name: "status", ty: String)],
                    ),
                ),
            ],
            stream_response: None,
            description: "",
            json_schema: (),
        ),
        EndpointSchema(
            name: "UserGetSignal1",
            code: 20740,
            parameters: [],
            returns: [
                Field(
                    name: "data",
                    ty: DataTable(
                        name: "S1Signal",
                        fields: [
                            Field(name: "timestamp", ty: BigInt), 
                            Field(name: "symbol", ty: String), 
                            Field(name: "binance_hyper_spread_bp", ty: Numeric), 
                            Field(name: "binance_hyper_spread_level", ty: String), 
                            Field(name: "avg_binance_hyper_spread_bp", ty: Numeric), 
                            Field(name: "avg_binance_hyper_spread_level", ty: String), 
                            Field(name: "hyper_bid_ask_spread_bp", ty: Numeric), 
                            Field(name: "binance_change_bp", ty: Numeric), 
                            Field(name: "hyper_change_bp", ty: Numeric), 
                            Field(name: "binance_trend_strength_dx", ty: Numeric), 
                            Field(name: "binance_best_ask_price", ty: Numeric), 
                            Field(name: "hyperliquid_best_ask_price", ty: Numeric)],
                    ),
                ),
            ],
            stream_response: None,
            description: "",
            json_schema: (),
        ),
        EndpointSchema(
            name: "UserGetBalance1",
            code: 20750,
            parameters: [],
            returns: [
                Field(
                    name: "data",
                    ty: Struct(
                        name: "Balance",
                        fields: [Field(name: "amount", ty: Numeric)],
                    ),
                ),
            ],
            stream_response: None,
            description: "",
            json_schema: (),
        ),
        EndpointSchema(
            name: "UserGetLivePosition1",
            code: 20760,
            parameters: [],
            returns: [
                Field(
                    name: "data",
                    ty: DataTable(
                        name: "S1LivePosition",
                        fields: [
                            Field(name: "id", ty: BigInt), 
                            Field(name: "timestamp", ty: BigInt), 
                            Field(name: "symbol", ty: String), 
                            Field(name: "direction", ty: String), 
                            Field(name: "entry_price", ty: Numeric), 
                            Field(name: "size", ty: Numeric), 
                            Field(name: "entry_usd_price", ty: Numeric), 
                            Field(name: "current_hl_price", ty: Numeric), 
                            Field(name: "current_binance_price", ty: Numeric), 
                            Field(name: "current_usd_price", ty: Numeric)
                        ],
                    ),
                ),
            ],
            stream_response: None,
            description: "",
            json_schema: (),
        ),
        EndpointSchema(
            name: "UserSubLivePosition1",
            code: 20761,
            parameters: [],
            returns: [
                Field(
                    name: "data",
                    ty: DataTable(
                        name: "S1LivePosition",
                        fields: [
                            Field(name: "id", ty: BigInt), 
                            Field(name: "timestamp", ty: BigInt), 
                            Field(name: "symbol", ty: String), 
                            Field(name: "direction", ty: String), 
                            Field(name: "entry_price", ty: Numeric), 
                            Field(name: "size", ty: Numeric), 
                            Field(name: "entry_usd_price", ty: Numeric), 
                            Field(name: "current_hl_price", ty: Numeric), 
                            Field(name: "current_binance_price", ty: Numeric), 
                            Field(name: "current_usd_price", ty: Numeric)
                        ],
                    ),
                ),
            ],
            stream_response: Some(DataTable(
                name: "S1LivePosition",
                fields: [
                    Field(name: "id", ty: BigInt),
                    Field(name: "timestamp", ty: BigInt),
                    Field(name: "symbol", ty: String),
                    Field(name: "direction", ty: String),
                    Field(name: "entry_price", ty: Numeric ),
                    Field(name: "size", ty: Numeric),
                    Field(name: "entry_usd_price", ty: Numeric ),
                    Field(name: "current_hl_price", ty: Numeric),
                    Field(name: "current_binance_price", ty: Numeric),
                    Field(name: "current_usd_price", ty: Numeric),
                ],
            )),
            description: "",
            json_schema: (),
        ),
        EndpointSchema(
            name: "UserGetS1Ledger",
            code: 20780,
            parameters: [
                Field(name: "event_id", ty: Optional(Int)),
                Field(name: "symbol", ty: Optional(String)),
            ],
            returns: [
                Field(
                    name: "data",
                    ty: DataTable(
                        name: "S1Ledger",
                        fields: [
                            Field(name: "id", ty: BigInt), 
                            Field(name: "event_id", ty: Int), 
                            Field(name: "datetime", ty: TimeStampMs), 
                            Field(name: "symbol", ty: String), 
                            Field(name: "exchange", ty: String), 
                            Field(name: "direction", ty: String), 
                            Field(name: "open_order_id", ty: BigInt), 
                            Field(name: "close_order_id", ty: BigInt), 
                            Field(name: "open_order_cloid", ty: String), 
                            Field(name: "close_order_cloid", ty: String), 
                            Field(name: "open_price_usd", ty: Numeric), 
                            Field(name: "close_price_usd", ty: Numeric), 
                            Field(name: "position_size", ty: Numeric), 
                            Field(name: "fee", ty: Numeric), 
                            Field(name: "closed_profit", ty: Numeric)],
                    ),
                ),
            ],
            stream_response: None,
            description: "",
            json_schema: (),
        ),
        EndpointSchema(
            name: "UserCancelOrClosePosition1",
            code: 20790,
            parameters: [
                Field(
                    name: "id",
                    ty: BigInt,
                ),
            ],
            returns: [],
            stream_response: None,
            description: "",
            json_schema: (),
        ),
    ]
	)
)